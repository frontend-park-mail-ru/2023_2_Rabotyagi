name: prod-build

on:
    pull_request:
        branches: [main]
        types:
            - closed
env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{github.repository}}
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to the Github Container registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract Docker metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

            - name: Build and push
              uses: docker/build-push-action@v5
              id: build
              with:
                  context: .
                  file: Dockerfile.prod
                  build-args: |
                      SCHEMA=https://
                      API_URL=goods-galaxy.ru

                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

    notify-good:
        runs-on: ubuntu-latest
        if: ${{ always() && needs.build.result == 'success' }}
        needs: [build]
        steps:
            - name: Send Good Notification
              uses: appleboy/telegram-action@master
              with:
                  to: ${{ secrets.TELEGRAM_CHAT }}
                  token: ${{ secrets.TELEGRAM_TOKEN }}
                  # format: markdown
                  message: |
                      Билд prod образа
                        - ${{ github.repository }}:${{github.ref_name}}
                      Закончился с ✅
                      https://github.com/frontend-park-mail-ru/2023_2_Rabotyagi/commit/${{github.sha}}

    notify-bad:
        runs-on: ubuntu-latest
        if: ${{ always() && needs.build.result == 'failure' }}
        needs: [build]
        steps:
            - name: Send Bad Notification
              uses: appleboy/telegram-action@master
              with:
                  to: ${{ secrets.TELEGRAM_CHAT }}
                  token: ${{ secrets.TELEGRAM_TOKEN }}
                  # format: markdown
                  message: |
                      Билд prod образа
                        - ${{ github.repository }}:${{github.ref_name}}
                      Закончился с ❌
                      https://github.com/frontend-park-mail-ru/2023_2_Rabotyagi/actions/runs/${{github.run_id}}

    deploy:
        runs-on: ubuntu-latest
        if: ${{ always() && needs.build.result == 'success' }}
        needs: [notify-good, build]
        steps:
            - name: Deploy to dev
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: goods-galaxy.ru
                  username: ${{ secrets.BOT_USERNAME }}
                  password: ${{ secrets.BOT_PASSWORD }}
                  script_stop: true

                  script: |
                      cd /var/share/rabotyagi
                      docker compose pull frontend
                      docker compose up -d --force-recreate frontend
            - name: Notify deploy
              uses: appleboy/telegram-action@master
              with:
                  to: ${{ secrets.TELEGRAM_CHAT }}
                  token: ${{ secrets.TELEGRAM_TOKEN }}
                  # format: markdown
                  message: |
                      Деплой на goods-galaxy состоялся, господа
                      http://goods-galaxy.ru
